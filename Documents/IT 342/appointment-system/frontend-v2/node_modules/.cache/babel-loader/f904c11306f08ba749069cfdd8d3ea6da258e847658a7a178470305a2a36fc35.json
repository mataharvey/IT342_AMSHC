{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iamhe\\\\Documents\\\\IT 342\\\\appointment-system\\\\Documents\\\\IT 342\\\\appointment-system\\\\frontend-v2\\\\src\\\\pages\\\\HospitalSelection.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst hospitals = {\n  Manila: [{\n    name: 'Manila Doctors Hospital',\n    address: 'Kalaw Ave, Ermita, Manila'\n  }, {\n    name: 'Philippine General Hospital',\n    address: 'Taft Ave, Ermita, Manila'\n  }, {\n    name: 'Manila Medical Center',\n    address: 'UN Ave, Ermita, Manila'\n  }]\n  // Add more cities if needed\n};\nconst HospitalSelection = () => {\n  _s();\n  var _hospitals$selectedCi;\n  const navigate = useNavigate();\n  const {\n    state\n  } = useLocation();\n  const selectedCity = state === null || state === void 0 ? void 0 : state.city;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl mb-4\",\n      children: [\"Choose a Hospital in \", selectedCity]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), (_hospitals$selectedCi = hospitals[selectedCity]) === null || _hospitals$selectedCi === void 0 ? void 0 : _hospitals$selectedCi.map((hospital, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"block w-full bg-blue-100 p-4 mb-3 rounded\",\n      onClick: () => navigate('/doctors', {\n        state: {\n          city: selectedCity,\n          hospital: hospital.name\n        }\n      }),\n      children: [hospital.name, \" - \", hospital.address]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(HospitalSelection, \"b3n5T5F0HMh0SGh45rZXwfsCiws=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = HospitalSelection;\nexport default HospitalSelection;\nvar _c;\n$RefreshReg$(_c, \"HospitalSelection\");","map":{"version":3,"names":["React","useNavigate","useLocation","jsxDEV","_jsxDEV","hospitals","Manila","name","address","HospitalSelection","_s","_hospitals$selectedCi","navigate","state","selectedCity","city","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","hospital","idx","onClick","_c","$RefreshReg$"],"sources":["C:/Users/iamhe/Documents/IT 342/appointment-system/Documents/IT 342/appointment-system/frontend-v2/src/pages/HospitalSelection.js"],"sourcesContent":["import React from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\n\r\nconst hospitals = {\r\n  Manila: [\r\n    { name: 'Manila Doctors Hospital', address: 'Kalaw Ave, Ermita, Manila' },\r\n    { name: 'Philippine General Hospital', address: 'Taft Ave, Ermita, Manila' },\r\n    { name: 'Manila Medical Center', address: 'UN Ave, Ermita, Manila' },\r\n  ],\r\n  // Add more cities if needed\r\n};\r\n\r\nconst HospitalSelection = () => {\r\n  const navigate = useNavigate();\r\n  const { state } = useLocation();\r\n  const selectedCity = state?.city;\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <h2 className=\"text-2xl mb-4\">Choose a Hospital in {selectedCity}</h2>\r\n      {hospitals[selectedCity]?.map((hospital, idx) => (\r\n        <button\r\n          key={idx}\r\n          className=\"block w-full bg-blue-100 p-4 mb-3 rounded\"\r\n          onClick={() =>\r\n            navigate('/doctors', {\r\n              state: { city: selectedCity, hospital: hospital.name },\r\n            })\r\n          }\r\n        >\r\n          {hospital.name} - {hospital.address}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HospitalSelection;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,SAAS,GAAG;EAChBC,MAAM,EAAE,CACN;IAAEC,IAAI,EAAE,yBAAyB;IAAEC,OAAO,EAAE;EAA4B,CAAC,EACzE;IAAED,IAAI,EAAE,6BAA6B;IAAEC,OAAO,EAAE;EAA2B,CAAC,EAC5E;IAAED,IAAI,EAAE,uBAAuB;IAAEC,OAAO,EAAE;EAAyB,CAAC;EAEtE;AACF,CAAC;AAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,qBAAA;EAC9B,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEY;EAAM,CAAC,GAAGX,WAAW,CAAC,CAAC;EAC/B,MAAMY,YAAY,GAAGD,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEE,IAAI;EAEhC,oBACEX,OAAA;IAAKY,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBb,OAAA;MAAIY,SAAS,EAAC,eAAe;MAAAC,QAAA,GAAC,uBAAqB,EAACH,YAAY;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,GAAAV,qBAAA,GACrEN,SAAS,CAACS,YAAY,CAAC,cAAAH,qBAAA,uBAAvBA,qBAAA,CAAyBW,GAAG,CAAC,CAACC,QAAQ,EAAEC,GAAG,kBAC1CpB,OAAA;MAEEY,SAAS,EAAC,2CAA2C;MACrDS,OAAO,EAAEA,CAAA,KACPb,QAAQ,CAAC,UAAU,EAAE;QACnBC,KAAK,EAAE;UAAEE,IAAI,EAAED,YAAY;UAAES,QAAQ,EAAEA,QAAQ,CAAChB;QAAK;MACvD,CAAC,CACF;MAAAU,QAAA,GAEAM,QAAQ,CAAChB,IAAI,EAAC,KAAG,EAACgB,QAAQ,CAACf,OAAO;IAAA,GAR9BgB,GAAG;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASF,CACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACX,EAAA,CAvBID,iBAAiB;EAAA,QACJR,WAAW,EACVC,WAAW;AAAA;AAAAwB,EAAA,GAFzBjB,iBAAiB;AAyBvB,eAAeA,iBAAiB;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}